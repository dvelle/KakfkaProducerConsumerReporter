object ProducerExample extends App {

  import java.util.Properties

  import org.apache.kafka.clients.producer._

  import scala.collection.JavaConversions._

  val  props = new Properties()
  props.put("bootstrap.servers", "localhost:9092")

  props.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer")
  props.put("value.serializer", "org.apache.kafka.common.serialization.StringSerializer")


  val producer = new KafkaProducer[String, String](props)

  val TOPIC="jason_x"

  for(i<- 1 to 2500){
    val record = new ProducerRecord(TOPIC, "key", s"hello $i")
    producer.send(record)
  }


  val b = new PrometheusReporter
  b.init
  for (entry <- producer.metrics.entrySet) {
    println(entry.getKey.name + " : " + entry.getValue.metricValue)
    b.metricChange(entry)
  }



  val record = new ProducerRecord(TOPIC, "key", "the end "+new java.util.Date)
  producer.send(record)

  producer.close()
}
